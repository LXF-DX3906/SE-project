<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.AlbumMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Album">
    <id column="album_id" jdbcType="INTEGER" property="albumId" />
    <result column="album_name" jdbcType="VARCHAR" property="albumName" />
    <result column="owner_id" jdbcType="INTEGER" property="ownerId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    album_id, album_name, owner_id, status, description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from album
    where album_id = #{albumId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from album
    where album_id = #{albumId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Album">
    insert into album (album_id, album_name, owner_id, 
      status, description)
    values (#{albumId,jdbcType=INTEGER}, #{albumName,jdbcType=VARCHAR}, #{ownerId,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Album" useGeneratedKeys="true" keyProperty="albumId">
    insert into album
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="albumId != null">
        album_id,
      </if>
      <if test="albumName != null">
        album_name,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="albumId != null">
        #{albumId,jdbcType=INTEGER},
      </if>
      <if test="albumName != null">
        #{albumName,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Album">
    update album
    <set>
      <if test="albumName != null">
        album_name = #{albumName,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where album_id = #{albumId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Album">
    update album
    set album_name = #{albumName,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where album_id = #{albumId,jdbcType=INTEGER}
  </update>
  <select id="getAlbum" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from album
    where owner_id = #{ownerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteAlbum" parameterType="com.example.demo.entity.Album">
    delete from album
    where album_id = #{albumId,jdbcType=INTEGER}
      and owner_id = #{ownerId,jdbcType=INTEGER}
  </delete>
</mapper>